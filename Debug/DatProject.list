
DatProject.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000009e8  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000000c  08000b90  08000b90  00010b90  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000b9c  08000b9c  00010ba4  2**0
                  CONTENTS
  4 .ARM          00000000  08000b9c  08000b9c  00010ba4  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000b9c  08000ba4  00010ba4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000b9c  08000b9c  00010b9c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000ba0  08000ba0  00010ba0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010ba4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00010ba4  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  00010ba4  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000136d  00000000  00000000  00010bce  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000415  00000000  00000000  00011f3b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000140  00000000  00000000  00012350  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000108  00000000  00000000  00012490  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002024  00000000  00000000  00012598  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001555  00000000  00000000  000145bc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00008ee7  00000000  00000000  00015b11  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  0001e9f8  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000454  00000000  00000000  0001ea48  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000b78 	.word	0x08000b78

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	08000b78 	.word	0x08000b78

080001e8 <strlen>:
 80001e8:	4603      	mov	r3, r0
 80001ea:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001ee:	2a00      	cmp	r2, #0
 80001f0:	d1fb      	bne.n	80001ea <strlen+0x2>
 80001f2:	1a18      	subs	r0, r3, r0
 80001f4:	3801      	subs	r0, #1
 80001f6:	4770      	bx	lr

080001f8 <GPIO_Init>:
 *
 * @Note            - None
 *
*/
void GPIO_Init(GPIO_Handle_t *pGPIO)
{
 80001f8:	b580      	push	{r7, lr}
 80001fa:	b086      	sub	sp, #24
 80001fc:	af00      	add	r7, sp, #0
 80001fe:	6078      	str	r0, [r7, #4]
    uint32_t tempReg;
    /* config the mode of the pin */
    /*enable clock for GPIOx*/
    GPIO_PeriClockControl(pGPIO->pGPIOx,ENABLE);
 8000200:	687b      	ldr	r3, [r7, #4]
 8000202:	681b      	ldr	r3, [r3, #0]
 8000204:	2101      	movs	r1, #1
 8000206:	4618      	mov	r0, r3
 8000208:	f000 f98c 	bl	8000524 <GPIO_PeriClockControl>
    if(pGPIO->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 800020c:	687b      	ldr	r3, [r7, #4]
 800020e:	795b      	ldrb	r3, [r3, #5]
 8000210:	2b03      	cmp	r3, #3
 8000212:	d81a      	bhi.n	800024a <GPIO_Init+0x52>
    {
        tempReg = pGPIO->pGPIOx->MODER & ~(3 << pGPIO->GPIO_PinConfig.GPIO_PinNumber * 2);
 8000214:	687b      	ldr	r3, [r7, #4]
 8000216:	681b      	ldr	r3, [r3, #0]
 8000218:	681b      	ldr	r3, [r3, #0]
 800021a:	687a      	ldr	r2, [r7, #4]
 800021c:	7912      	ldrb	r2, [r2, #4]
 800021e:	0052      	lsls	r2, r2, #1
 8000220:	2103      	movs	r1, #3
 8000222:	fa01 f202 	lsl.w	r2, r1, r2
 8000226:	43d2      	mvns	r2, r2
 8000228:	4013      	ands	r3, r2
 800022a:	613b      	str	r3, [r7, #16]
        pGPIO->pGPIOx->MODER = tempReg | (pGPIO->GPIO_PinConfig.GPIO_PinMode << pGPIO->GPIO_PinConfig.GPIO_PinNumber * 2);
 800022c:	687b      	ldr	r3, [r7, #4]
 800022e:	795b      	ldrb	r3, [r3, #5]
 8000230:	461a      	mov	r2, r3
 8000232:	687b      	ldr	r3, [r7, #4]
 8000234:	791b      	ldrb	r3, [r3, #4]
 8000236:	005b      	lsls	r3, r3, #1
 8000238:	fa02 f303 	lsl.w	r3, r2, r3
 800023c:	4619      	mov	r1, r3
 800023e:	687b      	ldr	r3, [r7, #4]
 8000240:	681b      	ldr	r3, [r3, #0]
 8000242:	693a      	ldr	r2, [r7, #16]
 8000244:	430a      	orrs	r2, r1
 8000246:	601a      	str	r2, [r3, #0]
 8000248:	e0b6      	b.n	80003b8 <GPIO_Init+0x1c0>
    else
    {
    	/*Init clock for EXTI and SYSCFG peripherals*/
    	//EXTI_CLK_ENB();
        /* Configuration of EXTI peripheral */
        if(pGPIO->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 800024a:	687b      	ldr	r3, [r7, #4]
 800024c:	795b      	ldrb	r3, [r3, #5]
 800024e:	2b04      	cmp	r3, #4
 8000250:	d117      	bne.n	8000282 <GPIO_Init+0x8a>
        {
            /* config the FTRS register */
            EXTI->FTSR |= (1 << pGPIO->GPIO_PinConfig.GPIO_PinNumber);
 8000252:	4b97      	ldr	r3, [pc, #604]	; (80004b0 <GPIO_Init+0x2b8>)
 8000254:	68db      	ldr	r3, [r3, #12]
 8000256:	687a      	ldr	r2, [r7, #4]
 8000258:	7912      	ldrb	r2, [r2, #4]
 800025a:	4611      	mov	r1, r2
 800025c:	2201      	movs	r2, #1
 800025e:	408a      	lsls	r2, r1
 8000260:	4611      	mov	r1, r2
 8000262:	4a93      	ldr	r2, [pc, #588]	; (80004b0 <GPIO_Init+0x2b8>)
 8000264:	430b      	orrs	r3, r1
 8000266:	60d3      	str	r3, [r2, #12]
            EXTI->RTSR &= ~(1 << pGPIO->GPIO_PinConfig.GPIO_PinNumber);
 8000268:	4b91      	ldr	r3, [pc, #580]	; (80004b0 <GPIO_Init+0x2b8>)
 800026a:	689b      	ldr	r3, [r3, #8]
 800026c:	687a      	ldr	r2, [r7, #4]
 800026e:	7912      	ldrb	r2, [r2, #4]
 8000270:	4611      	mov	r1, r2
 8000272:	2201      	movs	r2, #1
 8000274:	408a      	lsls	r2, r1
 8000276:	43d2      	mvns	r2, r2
 8000278:	4611      	mov	r1, r2
 800027a:	4a8d      	ldr	r2, [pc, #564]	; (80004b0 <GPIO_Init+0x2b8>)
 800027c:	400b      	ands	r3, r1
 800027e:	6093      	str	r3, [r2, #8]
 8000280:	e035      	b.n	80002ee <GPIO_Init+0xf6>

        }
        else if(pGPIO->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 8000282:	687b      	ldr	r3, [r7, #4]
 8000284:	795b      	ldrb	r3, [r3, #5]
 8000286:	2b05      	cmp	r3, #5
 8000288:	d117      	bne.n	80002ba <GPIO_Init+0xc2>
        {
            /* config the RTRS register */
            EXTI->RTSR |= (1 << pGPIO->GPIO_PinConfig.GPIO_PinNumber);
 800028a:	4b89      	ldr	r3, [pc, #548]	; (80004b0 <GPIO_Init+0x2b8>)
 800028c:	689b      	ldr	r3, [r3, #8]
 800028e:	687a      	ldr	r2, [r7, #4]
 8000290:	7912      	ldrb	r2, [r2, #4]
 8000292:	4611      	mov	r1, r2
 8000294:	2201      	movs	r2, #1
 8000296:	408a      	lsls	r2, r1
 8000298:	4611      	mov	r1, r2
 800029a:	4a85      	ldr	r2, [pc, #532]	; (80004b0 <GPIO_Init+0x2b8>)
 800029c:	430b      	orrs	r3, r1
 800029e:	6093      	str	r3, [r2, #8]
            EXTI->FTSR &= ~(1 << pGPIO->GPIO_PinConfig.GPIO_PinNumber);
 80002a0:	4b83      	ldr	r3, [pc, #524]	; (80004b0 <GPIO_Init+0x2b8>)
 80002a2:	68db      	ldr	r3, [r3, #12]
 80002a4:	687a      	ldr	r2, [r7, #4]
 80002a6:	7912      	ldrb	r2, [r2, #4]
 80002a8:	4611      	mov	r1, r2
 80002aa:	2201      	movs	r2, #1
 80002ac:	408a      	lsls	r2, r1
 80002ae:	43d2      	mvns	r2, r2
 80002b0:	4611      	mov	r1, r2
 80002b2:	4a7f      	ldr	r2, [pc, #508]	; (80004b0 <GPIO_Init+0x2b8>)
 80002b4:	400b      	ands	r3, r1
 80002b6:	60d3      	str	r3, [r2, #12]
 80002b8:	e019      	b.n	80002ee <GPIO_Init+0xf6>
        }
        else if (pGPIO->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT)
 80002ba:	687b      	ldr	r3, [r7, #4]
 80002bc:	795b      	ldrb	r3, [r3, #5]
 80002be:	2b06      	cmp	r3, #6
 80002c0:	d115      	bne.n	80002ee <GPIO_Init+0xf6>
        {
            /* config both RTRS and FRRS */
            EXTI->FTSR |= (1 << pGPIO->GPIO_PinConfig.GPIO_PinNumber);
 80002c2:	4b7b      	ldr	r3, [pc, #492]	; (80004b0 <GPIO_Init+0x2b8>)
 80002c4:	68db      	ldr	r3, [r3, #12]
 80002c6:	687a      	ldr	r2, [r7, #4]
 80002c8:	7912      	ldrb	r2, [r2, #4]
 80002ca:	4611      	mov	r1, r2
 80002cc:	2201      	movs	r2, #1
 80002ce:	408a      	lsls	r2, r1
 80002d0:	4611      	mov	r1, r2
 80002d2:	4a77      	ldr	r2, [pc, #476]	; (80004b0 <GPIO_Init+0x2b8>)
 80002d4:	430b      	orrs	r3, r1
 80002d6:	60d3      	str	r3, [r2, #12]
            EXTI->RTSR |= (1 << pGPIO->GPIO_PinConfig.GPIO_PinNumber);
 80002d8:	4b75      	ldr	r3, [pc, #468]	; (80004b0 <GPIO_Init+0x2b8>)
 80002da:	689b      	ldr	r3, [r3, #8]
 80002dc:	687a      	ldr	r2, [r7, #4]
 80002de:	7912      	ldrb	r2, [r2, #4]
 80002e0:	4611      	mov	r1, r2
 80002e2:	2201      	movs	r2, #1
 80002e4:	408a      	lsls	r2, r1
 80002e6:	4611      	mov	r1, r2
 80002e8:	4a71      	ldr	r2, [pc, #452]	; (80004b0 <GPIO_Init+0x2b8>)
 80002ea:	430b      	orrs	r3, r1
 80002ec:	6093      	str	r3, [r2, #8]
        }

        /* config interupt mask register from EXTI side
         * this register allows interupt to be deliveried to NVIC controller */
        EXTI->IMR |= (1 << pGPIO->GPIO_PinConfig.GPIO_PinNumber);
 80002ee:	4b70      	ldr	r3, [pc, #448]	; (80004b0 <GPIO_Init+0x2b8>)
 80002f0:	681b      	ldr	r3, [r3, #0]
 80002f2:	687a      	ldr	r2, [r7, #4]
 80002f4:	7912      	ldrb	r2, [r2, #4]
 80002f6:	4611      	mov	r1, r2
 80002f8:	2201      	movs	r2, #1
 80002fa:	408a      	lsls	r2, r1
 80002fc:	4611      	mov	r1, r2
 80002fe:	4a6c      	ldr	r2, [pc, #432]	; (80004b0 <GPIO_Init+0x2b8>)
 8000300:	430b      	orrs	r3, r1
 8000302:	6013      	str	r3, [r2, #0]


        /* Configuration of SYSFG peripherals */

        /* config GPIO port selection in SYSCFG_EXTICR */
        uint8_t temp1 = pGPIO->GPIO_PinConfig.GPIO_PinNumber / 4 ;
 8000304:	687b      	ldr	r3, [r7, #4]
 8000306:	791b      	ldrb	r3, [r3, #4]
 8000308:	089b      	lsrs	r3, r3, #2
 800030a:	75fb      	strb	r3, [r7, #23]
        		uint8_t temp2 = pGPIO->GPIO_PinConfig.GPIO_PinNumber % 4;
 800030c:	687b      	ldr	r3, [r7, #4]
 800030e:	791b      	ldrb	r3, [r3, #4]
 8000310:	f003 0303 	and.w	r3, r3, #3
 8000314:	75bb      	strb	r3, [r7, #22]
        		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIO->pGPIOx);
 8000316:	687b      	ldr	r3, [r7, #4]
 8000318:	681b      	ldr	r3, [r3, #0]
 800031a:	4a66      	ldr	r2, [pc, #408]	; (80004b4 <GPIO_Init+0x2bc>)
 800031c:	4293      	cmp	r3, r2
 800031e:	d039      	beq.n	8000394 <GPIO_Init+0x19c>
 8000320:	687b      	ldr	r3, [r7, #4]
 8000322:	681b      	ldr	r3, [r3, #0]
 8000324:	4a64      	ldr	r2, [pc, #400]	; (80004b8 <GPIO_Init+0x2c0>)
 8000326:	4293      	cmp	r3, r2
 8000328:	d032      	beq.n	8000390 <GPIO_Init+0x198>
 800032a:	687b      	ldr	r3, [r7, #4]
 800032c:	681b      	ldr	r3, [r3, #0]
 800032e:	4a63      	ldr	r2, [pc, #396]	; (80004bc <GPIO_Init+0x2c4>)
 8000330:	4293      	cmp	r3, r2
 8000332:	d02b      	beq.n	800038c <GPIO_Init+0x194>
 8000334:	687b      	ldr	r3, [r7, #4]
 8000336:	681b      	ldr	r3, [r3, #0]
 8000338:	4a61      	ldr	r2, [pc, #388]	; (80004c0 <GPIO_Init+0x2c8>)
 800033a:	4293      	cmp	r3, r2
 800033c:	d024      	beq.n	8000388 <GPIO_Init+0x190>
 800033e:	687b      	ldr	r3, [r7, #4]
 8000340:	681b      	ldr	r3, [r3, #0]
 8000342:	4a60      	ldr	r2, [pc, #384]	; (80004c4 <GPIO_Init+0x2cc>)
 8000344:	4293      	cmp	r3, r2
 8000346:	d01d      	beq.n	8000384 <GPIO_Init+0x18c>
 8000348:	687b      	ldr	r3, [r7, #4]
 800034a:	681b      	ldr	r3, [r3, #0]
 800034c:	4a5e      	ldr	r2, [pc, #376]	; (80004c8 <GPIO_Init+0x2d0>)
 800034e:	4293      	cmp	r3, r2
 8000350:	d016      	beq.n	8000380 <GPIO_Init+0x188>
 8000352:	687b      	ldr	r3, [r7, #4]
 8000354:	681b      	ldr	r3, [r3, #0]
 8000356:	4a5d      	ldr	r2, [pc, #372]	; (80004cc <GPIO_Init+0x2d4>)
 8000358:	4293      	cmp	r3, r2
 800035a:	d00f      	beq.n	800037c <GPIO_Init+0x184>
 800035c:	687b      	ldr	r3, [r7, #4]
 800035e:	681b      	ldr	r3, [r3, #0]
 8000360:	4a5b      	ldr	r2, [pc, #364]	; (80004d0 <GPIO_Init+0x2d8>)
 8000362:	4293      	cmp	r3, r2
 8000364:	d008      	beq.n	8000378 <GPIO_Init+0x180>
 8000366:	687b      	ldr	r3, [r7, #4]
 8000368:	681b      	ldr	r3, [r3, #0]
 800036a:	4a5a      	ldr	r2, [pc, #360]	; (80004d4 <GPIO_Init+0x2dc>)
 800036c:	4293      	cmp	r3, r2
 800036e:	d101      	bne.n	8000374 <GPIO_Init+0x17c>
 8000370:	2308      	movs	r3, #8
 8000372:	e010      	b.n	8000396 <GPIO_Init+0x19e>
 8000374:	2300      	movs	r3, #0
 8000376:	e00e      	b.n	8000396 <GPIO_Init+0x19e>
 8000378:	2307      	movs	r3, #7
 800037a:	e00c      	b.n	8000396 <GPIO_Init+0x19e>
 800037c:	2306      	movs	r3, #6
 800037e:	e00a      	b.n	8000396 <GPIO_Init+0x19e>
 8000380:	2305      	movs	r3, #5
 8000382:	e008      	b.n	8000396 <GPIO_Init+0x19e>
 8000384:	2304      	movs	r3, #4
 8000386:	e006      	b.n	8000396 <GPIO_Init+0x19e>
 8000388:	2303      	movs	r3, #3
 800038a:	e004      	b.n	8000396 <GPIO_Init+0x19e>
 800038c:	2302      	movs	r3, #2
 800038e:	e002      	b.n	8000396 <GPIO_Init+0x19e>
 8000390:	2301      	movs	r3, #1
 8000392:	e000      	b.n	8000396 <GPIO_Init+0x19e>
 8000394:	2300      	movs	r3, #0
 8000396:	757b      	strb	r3, [r7, #21]
        		SYSCFG_PCLK_EN();
 8000398:	4b4f      	ldr	r3, [pc, #316]	; (80004d8 <GPIO_Init+0x2e0>)
 800039a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800039c:	4a4e      	ldr	r2, [pc, #312]	; (80004d8 <GPIO_Init+0x2e0>)
 800039e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80003a2:	6453      	str	r3, [r2, #68]	; 0x44
        		SYSCFG->EXTICR[temp1] = portcode << ( temp2 * 4);
 80003a4:	7d7a      	ldrb	r2, [r7, #21]
 80003a6:	7dbb      	ldrb	r3, [r7, #22]
 80003a8:	009b      	lsls	r3, r3, #2
 80003aa:	fa02 f103 	lsl.w	r1, r2, r3
 80003ae:	4a4b      	ldr	r2, [pc, #300]	; (80004dc <GPIO_Init+0x2e4>)
 80003b0:	7dfb      	ldrb	r3, [r7, #23]
 80003b2:	3302      	adds	r3, #2
 80003b4:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

        /* End of configuration of SYSFG peripherals */
    }
    /* config speed */
    tempReg = 0;
 80003b8:	2300      	movs	r3, #0
 80003ba:	613b      	str	r3, [r7, #16]
    tempReg = pGPIO->pGPIOx->OSPEEDR & ~(0x3 << pGPIO->GPIO_PinConfig.GPIO_PinNumber * 2); /* 2 bits need to be deleted */
 80003bc:	687b      	ldr	r3, [r7, #4]
 80003be:	681b      	ldr	r3, [r3, #0]
 80003c0:	689b      	ldr	r3, [r3, #8]
 80003c2:	687a      	ldr	r2, [r7, #4]
 80003c4:	7912      	ldrb	r2, [r2, #4]
 80003c6:	0052      	lsls	r2, r2, #1
 80003c8:	2103      	movs	r1, #3
 80003ca:	fa01 f202 	lsl.w	r2, r1, r2
 80003ce:	43d2      	mvns	r2, r2
 80003d0:	4013      	ands	r3, r2
 80003d2:	613b      	str	r3, [r7, #16]
    pGPIO->pGPIOx->OSPEEDR = tempReg | (pGPIO->GPIO_PinConfig.GPIO_PinSpeed << pGPIO->GPIO_PinConfig.GPIO_PinNumber * 2);
 80003d4:	687b      	ldr	r3, [r7, #4]
 80003d6:	799b      	ldrb	r3, [r3, #6]
 80003d8:	461a      	mov	r2, r3
 80003da:	687b      	ldr	r3, [r7, #4]
 80003dc:	791b      	ldrb	r3, [r3, #4]
 80003de:	005b      	lsls	r3, r3, #1
 80003e0:	fa02 f303 	lsl.w	r3, r2, r3
 80003e4:	4619      	mov	r1, r3
 80003e6:	687b      	ldr	r3, [r7, #4]
 80003e8:	681b      	ldr	r3, [r3, #0]
 80003ea:	693a      	ldr	r2, [r7, #16]
 80003ec:	430a      	orrs	r2, r1
 80003ee:	609a      	str	r2, [r3, #8]
    /* config pupd  */
    tempReg = 0;
 80003f0:	2300      	movs	r3, #0
 80003f2:	613b      	str	r3, [r7, #16]
    tempReg = pGPIO->pGPIOx->PUPDR & ~(0x3 << pGPIO->GPIO_PinConfig.GPIO_PinNumber * 2); /* 2 bits need to be deleted */
 80003f4:	687b      	ldr	r3, [r7, #4]
 80003f6:	681b      	ldr	r3, [r3, #0]
 80003f8:	68db      	ldr	r3, [r3, #12]
 80003fa:	687a      	ldr	r2, [r7, #4]
 80003fc:	7912      	ldrb	r2, [r2, #4]
 80003fe:	0052      	lsls	r2, r2, #1
 8000400:	2103      	movs	r1, #3
 8000402:	fa01 f202 	lsl.w	r2, r1, r2
 8000406:	43d2      	mvns	r2, r2
 8000408:	4013      	ands	r3, r2
 800040a:	613b      	str	r3, [r7, #16]
    pGPIO->pGPIOx->PUPDR = tempReg | (pGPIO->GPIO_PinConfig.GPIO_PinPuPdControl << pGPIO->GPIO_PinConfig.GPIO_PinNumber * 2);
 800040c:	687b      	ldr	r3, [r7, #4]
 800040e:	79db      	ldrb	r3, [r3, #7]
 8000410:	461a      	mov	r2, r3
 8000412:	687b      	ldr	r3, [r7, #4]
 8000414:	791b      	ldrb	r3, [r3, #4]
 8000416:	005b      	lsls	r3, r3, #1
 8000418:	fa02 f303 	lsl.w	r3, r2, r3
 800041c:	4619      	mov	r1, r3
 800041e:	687b      	ldr	r3, [r7, #4]
 8000420:	681b      	ldr	r3, [r3, #0]
 8000422:	693a      	ldr	r2, [r7, #16]
 8000424:	430a      	orrs	r2, r1
 8000426:	60da      	str	r2, [r3, #12]

    /*OUTPUT type*/
    if(pGPIO->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_OUT)
 8000428:	687b      	ldr	r3, [r7, #4]
 800042a:	795b      	ldrb	r3, [r3, #5]
 800042c:	2b01      	cmp	r3, #1
 800042e:	d119      	bne.n	8000464 <GPIO_Init+0x26c>
    {
		tempReg = 0;
 8000430:	2300      	movs	r3, #0
 8000432:	613b      	str	r3, [r7, #16]
		tempReg = pGPIO->pGPIOx->OTYPER & ~(0x1 << pGPIO->GPIO_PinConfig.GPIO_PinNumber); /* 1 bit need to be deleted */
 8000434:	687b      	ldr	r3, [r7, #4]
 8000436:	681b      	ldr	r3, [r3, #0]
 8000438:	685b      	ldr	r3, [r3, #4]
 800043a:	687a      	ldr	r2, [r7, #4]
 800043c:	7912      	ldrb	r2, [r2, #4]
 800043e:	4611      	mov	r1, r2
 8000440:	2201      	movs	r2, #1
 8000442:	408a      	lsls	r2, r1
 8000444:	43d2      	mvns	r2, r2
 8000446:	4013      	ands	r3, r2
 8000448:	613b      	str	r3, [r7, #16]
		pGPIO->pGPIOx->OTYPER = tempReg | (pGPIO->GPIO_PinConfig.GPIO_PinOpType << pGPIO->GPIO_PinConfig.GPIO_PinNumber);
 800044a:	687b      	ldr	r3, [r7, #4]
 800044c:	7a1b      	ldrb	r3, [r3, #8]
 800044e:	461a      	mov	r2, r3
 8000450:	687b      	ldr	r3, [r7, #4]
 8000452:	791b      	ldrb	r3, [r3, #4]
 8000454:	fa02 f303 	lsl.w	r3, r2, r3
 8000458:	4619      	mov	r1, r3
 800045a:	687b      	ldr	r3, [r7, #4]
 800045c:	681b      	ldr	r3, [r3, #0]
 800045e:	693a      	ldr	r2, [r7, #16]
 8000460:	430a      	orrs	r2, r1
 8000462:	605a      	str	r2, [r3, #4]
    }

    /* Alternate function */
    if(pGPIO->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALT)
 8000464:	687b      	ldr	r3, [r7, #4]
 8000466:	795b      	ldrb	r3, [r3, #5]
 8000468:	2b02      	cmp	r3, #2
 800046a:	d157      	bne.n	800051c <GPIO_Init+0x324>
    {
        tempReg = 0;
 800046c:	2300      	movs	r3, #0
 800046e:	613b      	str	r3, [r7, #16]
        if(pGPIO->GPIO_PinConfig.GPIO_PinNumber < 8)
 8000470:	687b      	ldr	r3, [r7, #4]
 8000472:	791b      	ldrb	r3, [r3, #4]
 8000474:	2b07      	cmp	r3, #7
 8000476:	d833      	bhi.n	80004e0 <GPIO_Init+0x2e8>
        {
            tempReg = pGPIO->pGPIOx->AFR[1] & ~(0xF << pGPIO->GPIO_PinConfig.GPIO_PinNumber * 4);
 8000478:	687b      	ldr	r3, [r7, #4]
 800047a:	681b      	ldr	r3, [r3, #0]
 800047c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800047e:	687a      	ldr	r2, [r7, #4]
 8000480:	7912      	ldrb	r2, [r2, #4]
 8000482:	0092      	lsls	r2, r2, #2
 8000484:	210f      	movs	r1, #15
 8000486:	fa01 f202 	lsl.w	r2, r1, r2
 800048a:	43d2      	mvns	r2, r2
 800048c:	4013      	ands	r3, r2
 800048e:	613b      	str	r3, [r7, #16]
            pGPIO->pGPIOx->AFR[0] = tempReg | (pGPIO->GPIO_PinConfig.GPIO_AltFunMode << pGPIO->GPIO_PinConfig.GPIO_PinNumber * 4);
 8000490:	687b      	ldr	r3, [r7, #4]
 8000492:	7a5b      	ldrb	r3, [r3, #9]
 8000494:	461a      	mov	r2, r3
 8000496:	687b      	ldr	r3, [r7, #4]
 8000498:	791b      	ldrb	r3, [r3, #4]
 800049a:	009b      	lsls	r3, r3, #2
 800049c:	fa02 f303 	lsl.w	r3, r2, r3
 80004a0:	4619      	mov	r1, r3
 80004a2:	687b      	ldr	r3, [r7, #4]
 80004a4:	681b      	ldr	r3, [r3, #0]
 80004a6:	693a      	ldr	r2, [r7, #16]
 80004a8:	430a      	orrs	r2, r1
 80004aa:	621a      	str	r2, [r3, #32]
            uint8_t PinLocation = pGPIO->GPIO_PinConfig.GPIO_PinNumber % 8;
            tempReg = pGPIO->pGPIOx->AFR[1] & ~(0xF << PinLocation * 4); /* 4 bits need to be deleted */
            pGPIO->pGPIOx->AFR[1] = tempReg | (pGPIO->GPIO_PinConfig.GPIO_AltFunMode << PinLocation * 4);
        }
    }
    return;
 80004ac:	e036      	b.n	800051c <GPIO_Init+0x324>
 80004ae:	bf00      	nop
 80004b0:	40013c00 	.word	0x40013c00
 80004b4:	40020000 	.word	0x40020000
 80004b8:	40020400 	.word	0x40020400
 80004bc:	40020800 	.word	0x40020800
 80004c0:	40020c00 	.word	0x40020c00
 80004c4:	40021000 	.word	0x40021000
 80004c8:	40021400 	.word	0x40021400
 80004cc:	40021800 	.word	0x40021800
 80004d0:	40021c00 	.word	0x40021c00
 80004d4:	40022000 	.word	0x40022000
 80004d8:	40023800 	.word	0x40023800
 80004dc:	40013800 	.word	0x40013800
            uint8_t PinLocation = pGPIO->GPIO_PinConfig.GPIO_PinNumber % 8;
 80004e0:	687b      	ldr	r3, [r7, #4]
 80004e2:	791b      	ldrb	r3, [r3, #4]
 80004e4:	f003 0307 	and.w	r3, r3, #7
 80004e8:	73fb      	strb	r3, [r7, #15]
            tempReg = pGPIO->pGPIOx->AFR[1] & ~(0xF << PinLocation * 4); /* 4 bits need to be deleted */
 80004ea:	687b      	ldr	r3, [r7, #4]
 80004ec:	681b      	ldr	r3, [r3, #0]
 80004ee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80004f0:	7bfa      	ldrb	r2, [r7, #15]
 80004f2:	0092      	lsls	r2, r2, #2
 80004f4:	210f      	movs	r1, #15
 80004f6:	fa01 f202 	lsl.w	r2, r1, r2
 80004fa:	43d2      	mvns	r2, r2
 80004fc:	4013      	ands	r3, r2
 80004fe:	613b      	str	r3, [r7, #16]
            pGPIO->pGPIOx->AFR[1] = tempReg | (pGPIO->GPIO_PinConfig.GPIO_AltFunMode << PinLocation * 4);
 8000500:	687b      	ldr	r3, [r7, #4]
 8000502:	7a5b      	ldrb	r3, [r3, #9]
 8000504:	461a      	mov	r2, r3
 8000506:	7bfb      	ldrb	r3, [r7, #15]
 8000508:	009b      	lsls	r3, r3, #2
 800050a:	fa02 f303 	lsl.w	r3, r2, r3
 800050e:	4619      	mov	r1, r3
 8000510:	687b      	ldr	r3, [r7, #4]
 8000512:	681b      	ldr	r3, [r3, #0]
 8000514:	693a      	ldr	r2, [r7, #16]
 8000516:	430a      	orrs	r2, r1
 8000518:	625a      	str	r2, [r3, #36]	; 0x24
    return;
 800051a:	bf00      	nop
 800051c:	bf00      	nop
}
 800051e:	3718      	adds	r7, #24
 8000520:	46bd      	mov	sp, r7
 8000522:	bd80      	pop	{r7, pc}

08000524 <GPIO_PeriClockControl>:
 *
 * @Note            -
 *
 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx,uint8_t EnorDi)
{
 8000524:	b480      	push	{r7}
 8000526:	b083      	sub	sp, #12
 8000528:	af00      	add	r7, sp, #0
 800052a:	6078      	str	r0, [r7, #4]
 800052c:	460b      	mov	r3, r1
 800052e:	70fb      	strb	r3, [r7, #3]
    if(EnorDi == ENABLE)
 8000530:	78fb      	ldrb	r3, [r7, #3]
 8000532:	2b01      	cmp	r3, #1
 8000534:	d164      	bne.n	8000600 <GPIO_PeriClockControl+0xdc>
    {
        if(pGPIOx == GPIOA)
 8000536:	687b      	ldr	r3, [r7, #4]
 8000538:	4a66      	ldr	r2, [pc, #408]	; (80006d4 <GPIO_PeriClockControl+0x1b0>)
 800053a:	4293      	cmp	r3, r2
 800053c:	d105      	bne.n	800054a <GPIO_PeriClockControl+0x26>
        {
            GPIOA_PCLK_EN();
 800053e:	4b66      	ldr	r3, [pc, #408]	; (80006d8 <GPIO_PeriClockControl+0x1b4>)
 8000540:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000542:	4a65      	ldr	r2, [pc, #404]	; (80006d8 <GPIO_PeriClockControl+0x1b4>)
 8000544:	f043 0301 	orr.w	r3, r3, #1
 8000548:	6313      	str	r3, [r2, #48]	; 0x30
        }
        if(pGPIOx == GPIOB)
 800054a:	687b      	ldr	r3, [r7, #4]
 800054c:	4a63      	ldr	r2, [pc, #396]	; (80006dc <GPIO_PeriClockControl+0x1b8>)
 800054e:	4293      	cmp	r3, r2
 8000550:	d105      	bne.n	800055e <GPIO_PeriClockControl+0x3a>
        {
            GPIOB_PCLK_EN();
 8000552:	4b61      	ldr	r3, [pc, #388]	; (80006d8 <GPIO_PeriClockControl+0x1b4>)
 8000554:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000556:	4a60      	ldr	r2, [pc, #384]	; (80006d8 <GPIO_PeriClockControl+0x1b4>)
 8000558:	f043 0302 	orr.w	r3, r3, #2
 800055c:	6313      	str	r3, [r2, #48]	; 0x30
        }
        if(pGPIOx == GPIOC)
 800055e:	687b      	ldr	r3, [r7, #4]
 8000560:	4a5f      	ldr	r2, [pc, #380]	; (80006e0 <GPIO_PeriClockControl+0x1bc>)
 8000562:	4293      	cmp	r3, r2
 8000564:	d105      	bne.n	8000572 <GPIO_PeriClockControl+0x4e>
        {
            GPIOC_PCLK_EN();
 8000566:	4b5c      	ldr	r3, [pc, #368]	; (80006d8 <GPIO_PeriClockControl+0x1b4>)
 8000568:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800056a:	4a5b      	ldr	r2, [pc, #364]	; (80006d8 <GPIO_PeriClockControl+0x1b4>)
 800056c:	f043 0304 	orr.w	r3, r3, #4
 8000570:	6313      	str	r3, [r2, #48]	; 0x30
        }
        if(pGPIOx == GPIOD)
 8000572:	687b      	ldr	r3, [r7, #4]
 8000574:	4a5b      	ldr	r2, [pc, #364]	; (80006e4 <GPIO_PeriClockControl+0x1c0>)
 8000576:	4293      	cmp	r3, r2
 8000578:	d105      	bne.n	8000586 <GPIO_PeriClockControl+0x62>
        {
            GPIOD_PCLK_EN();
 800057a:	4b57      	ldr	r3, [pc, #348]	; (80006d8 <GPIO_PeriClockControl+0x1b4>)
 800057c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800057e:	4a56      	ldr	r2, [pc, #344]	; (80006d8 <GPIO_PeriClockControl+0x1b4>)
 8000580:	f043 0308 	orr.w	r3, r3, #8
 8000584:	6313      	str	r3, [r2, #48]	; 0x30
        }
        if(pGPIOx == GPIOE)
 8000586:	687b      	ldr	r3, [r7, #4]
 8000588:	4a57      	ldr	r2, [pc, #348]	; (80006e8 <GPIO_PeriClockControl+0x1c4>)
 800058a:	4293      	cmp	r3, r2
 800058c:	d105      	bne.n	800059a <GPIO_PeriClockControl+0x76>
        {
            GPIOE_PCLK_EN();
 800058e:	4b52      	ldr	r3, [pc, #328]	; (80006d8 <GPIO_PeriClockControl+0x1b4>)
 8000590:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000592:	4a51      	ldr	r2, [pc, #324]	; (80006d8 <GPIO_PeriClockControl+0x1b4>)
 8000594:	f043 0310 	orr.w	r3, r3, #16
 8000598:	6313      	str	r3, [r2, #48]	; 0x30
        }
        if(pGPIOx == GPIOF)
 800059a:	687b      	ldr	r3, [r7, #4]
 800059c:	4a53      	ldr	r2, [pc, #332]	; (80006ec <GPIO_PeriClockControl+0x1c8>)
 800059e:	4293      	cmp	r3, r2
 80005a0:	d105      	bne.n	80005ae <GPIO_PeriClockControl+0x8a>
        {
            GPIOF_PCLK_EN();
 80005a2:	4b4d      	ldr	r3, [pc, #308]	; (80006d8 <GPIO_PeriClockControl+0x1b4>)
 80005a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80005a6:	4a4c      	ldr	r2, [pc, #304]	; (80006d8 <GPIO_PeriClockControl+0x1b4>)
 80005a8:	f043 0320 	orr.w	r3, r3, #32
 80005ac:	6313      	str	r3, [r2, #48]	; 0x30
        }
        if(pGPIOx == GPIOG)
 80005ae:	687b      	ldr	r3, [r7, #4]
 80005b0:	4a4f      	ldr	r2, [pc, #316]	; (80006f0 <GPIO_PeriClockControl+0x1cc>)
 80005b2:	4293      	cmp	r3, r2
 80005b4:	d105      	bne.n	80005c2 <GPIO_PeriClockControl+0x9e>
        {
            GPIOG_PCLK_EN();
 80005b6:	4b48      	ldr	r3, [pc, #288]	; (80006d8 <GPIO_PeriClockControl+0x1b4>)
 80005b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80005ba:	4a47      	ldr	r2, [pc, #284]	; (80006d8 <GPIO_PeriClockControl+0x1b4>)
 80005bc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80005c0:	6313      	str	r3, [r2, #48]	; 0x30
        }
        if(pGPIOx == GPIOH)
 80005c2:	687b      	ldr	r3, [r7, #4]
 80005c4:	4a4b      	ldr	r2, [pc, #300]	; (80006f4 <GPIO_PeriClockControl+0x1d0>)
 80005c6:	4293      	cmp	r3, r2
 80005c8:	d105      	bne.n	80005d6 <GPIO_PeriClockControl+0xb2>
        {
            GPIOH_PCLK_EN();
 80005ca:	4b43      	ldr	r3, [pc, #268]	; (80006d8 <GPIO_PeriClockControl+0x1b4>)
 80005cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80005ce:	4a42      	ldr	r2, [pc, #264]	; (80006d8 <GPIO_PeriClockControl+0x1b4>)
 80005d0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80005d4:	6313      	str	r3, [r2, #48]	; 0x30
        }
        if(pGPIOx == GPIOI)
 80005d6:	687b      	ldr	r3, [r7, #4]
 80005d8:	4a47      	ldr	r2, [pc, #284]	; (80006f8 <GPIO_PeriClockControl+0x1d4>)
 80005da:	4293      	cmp	r3, r2
 80005dc:	d105      	bne.n	80005ea <GPIO_PeriClockControl+0xc6>
        {
            GPIOI_PCLK_EN();
 80005de:	4b3e      	ldr	r3, [pc, #248]	; (80006d8 <GPIO_PeriClockControl+0x1b4>)
 80005e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80005e2:	4a3d      	ldr	r2, [pc, #244]	; (80006d8 <GPIO_PeriClockControl+0x1b4>)
 80005e4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80005e8:	6313      	str	r3, [r2, #48]	; 0x30
        }
        if(pGPIOx == GPIOJ)
 80005ea:	687b      	ldr	r3, [r7, #4]
 80005ec:	4a43      	ldr	r2, [pc, #268]	; (80006fc <GPIO_PeriClockControl+0x1d8>)
 80005ee:	4293      	cmp	r3, r2
 80005f0:	d16a      	bne.n	80006c8 <GPIO_PeriClockControl+0x1a4>
        {
            GPIOJ_PCLK_EN();
 80005f2:	4b39      	ldr	r3, [pc, #228]	; (80006d8 <GPIO_PeriClockControl+0x1b4>)
 80005f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80005f6:	4a38      	ldr	r2, [pc, #224]	; (80006d8 <GPIO_PeriClockControl+0x1b4>)
 80005f8:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80005fc:	6313      	str	r3, [r2, #48]	; 0x30
        if(pGPIOx == GPIOJ)
        {
            GPIOJ_PCLK_DI();
        }
    }
}
 80005fe:	e063      	b.n	80006c8 <GPIO_PeriClockControl+0x1a4>
        if(pGPIOx == GPIOA)
 8000600:	687b      	ldr	r3, [r7, #4]
 8000602:	4a34      	ldr	r2, [pc, #208]	; (80006d4 <GPIO_PeriClockControl+0x1b0>)
 8000604:	4293      	cmp	r3, r2
 8000606:	d105      	bne.n	8000614 <GPIO_PeriClockControl+0xf0>
            GPIOA_PCLK_DI();
 8000608:	4b33      	ldr	r3, [pc, #204]	; (80006d8 <GPIO_PeriClockControl+0x1b4>)
 800060a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800060c:	4a32      	ldr	r2, [pc, #200]	; (80006d8 <GPIO_PeriClockControl+0x1b4>)
 800060e:	f023 0301 	bic.w	r3, r3, #1
 8000612:	6313      	str	r3, [r2, #48]	; 0x30
        if(pGPIOx == GPIOB)
 8000614:	687b      	ldr	r3, [r7, #4]
 8000616:	4a31      	ldr	r2, [pc, #196]	; (80006dc <GPIO_PeriClockControl+0x1b8>)
 8000618:	4293      	cmp	r3, r2
 800061a:	d105      	bne.n	8000628 <GPIO_PeriClockControl+0x104>
            GPIOB_PCLK_DI();
 800061c:	4b2e      	ldr	r3, [pc, #184]	; (80006d8 <GPIO_PeriClockControl+0x1b4>)
 800061e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000620:	4a2d      	ldr	r2, [pc, #180]	; (80006d8 <GPIO_PeriClockControl+0x1b4>)
 8000622:	f023 0302 	bic.w	r3, r3, #2
 8000626:	6313      	str	r3, [r2, #48]	; 0x30
        if(pGPIOx == GPIOC)
 8000628:	687b      	ldr	r3, [r7, #4]
 800062a:	4a2d      	ldr	r2, [pc, #180]	; (80006e0 <GPIO_PeriClockControl+0x1bc>)
 800062c:	4293      	cmp	r3, r2
 800062e:	d105      	bne.n	800063c <GPIO_PeriClockControl+0x118>
            GPIOC_PCLK_DI();
 8000630:	4b29      	ldr	r3, [pc, #164]	; (80006d8 <GPIO_PeriClockControl+0x1b4>)
 8000632:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000634:	4a28      	ldr	r2, [pc, #160]	; (80006d8 <GPIO_PeriClockControl+0x1b4>)
 8000636:	f023 0304 	bic.w	r3, r3, #4
 800063a:	6313      	str	r3, [r2, #48]	; 0x30
        if(pGPIOx == GPIOD)
 800063c:	687b      	ldr	r3, [r7, #4]
 800063e:	4a29      	ldr	r2, [pc, #164]	; (80006e4 <GPIO_PeriClockControl+0x1c0>)
 8000640:	4293      	cmp	r3, r2
 8000642:	d105      	bne.n	8000650 <GPIO_PeriClockControl+0x12c>
            GPIOD_PCLK_DI();
 8000644:	4b24      	ldr	r3, [pc, #144]	; (80006d8 <GPIO_PeriClockControl+0x1b4>)
 8000646:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000648:	4a23      	ldr	r2, [pc, #140]	; (80006d8 <GPIO_PeriClockControl+0x1b4>)
 800064a:	f023 0308 	bic.w	r3, r3, #8
 800064e:	6313      	str	r3, [r2, #48]	; 0x30
        if(pGPIOx == GPIOE)
 8000650:	687b      	ldr	r3, [r7, #4]
 8000652:	4a25      	ldr	r2, [pc, #148]	; (80006e8 <GPIO_PeriClockControl+0x1c4>)
 8000654:	4293      	cmp	r3, r2
 8000656:	d105      	bne.n	8000664 <GPIO_PeriClockControl+0x140>
            GPIOE_PCLK_DI();
 8000658:	4b1f      	ldr	r3, [pc, #124]	; (80006d8 <GPIO_PeriClockControl+0x1b4>)
 800065a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800065c:	4a1e      	ldr	r2, [pc, #120]	; (80006d8 <GPIO_PeriClockControl+0x1b4>)
 800065e:	f023 0310 	bic.w	r3, r3, #16
 8000662:	6313      	str	r3, [r2, #48]	; 0x30
        if(pGPIOx == GPIOF)
 8000664:	687b      	ldr	r3, [r7, #4]
 8000666:	4a21      	ldr	r2, [pc, #132]	; (80006ec <GPIO_PeriClockControl+0x1c8>)
 8000668:	4293      	cmp	r3, r2
 800066a:	d105      	bne.n	8000678 <GPIO_PeriClockControl+0x154>
            GPIOF_PCLK_DI();
 800066c:	4b1a      	ldr	r3, [pc, #104]	; (80006d8 <GPIO_PeriClockControl+0x1b4>)
 800066e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000670:	4a19      	ldr	r2, [pc, #100]	; (80006d8 <GPIO_PeriClockControl+0x1b4>)
 8000672:	f023 0320 	bic.w	r3, r3, #32
 8000676:	6313      	str	r3, [r2, #48]	; 0x30
        if(pGPIOx == GPIOG)
 8000678:	687b      	ldr	r3, [r7, #4]
 800067a:	4a1d      	ldr	r2, [pc, #116]	; (80006f0 <GPIO_PeriClockControl+0x1cc>)
 800067c:	4293      	cmp	r3, r2
 800067e:	d105      	bne.n	800068c <GPIO_PeriClockControl+0x168>
            GPIOG_PCLK_DI();
 8000680:	4b15      	ldr	r3, [pc, #84]	; (80006d8 <GPIO_PeriClockControl+0x1b4>)
 8000682:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000684:	4a14      	ldr	r2, [pc, #80]	; (80006d8 <GPIO_PeriClockControl+0x1b4>)
 8000686:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800068a:	6313      	str	r3, [r2, #48]	; 0x30
        if(pGPIOx == GPIOH)
 800068c:	687b      	ldr	r3, [r7, #4]
 800068e:	4a19      	ldr	r2, [pc, #100]	; (80006f4 <GPIO_PeriClockControl+0x1d0>)
 8000690:	4293      	cmp	r3, r2
 8000692:	d105      	bne.n	80006a0 <GPIO_PeriClockControl+0x17c>
            GPIOH_PCLK_DI();
 8000694:	4b10      	ldr	r3, [pc, #64]	; (80006d8 <GPIO_PeriClockControl+0x1b4>)
 8000696:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000698:	4a0f      	ldr	r2, [pc, #60]	; (80006d8 <GPIO_PeriClockControl+0x1b4>)
 800069a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800069e:	6313      	str	r3, [r2, #48]	; 0x30
        if(pGPIOx == GPIOI)
 80006a0:	687b      	ldr	r3, [r7, #4]
 80006a2:	4a15      	ldr	r2, [pc, #84]	; (80006f8 <GPIO_PeriClockControl+0x1d4>)
 80006a4:	4293      	cmp	r3, r2
 80006a6:	d105      	bne.n	80006b4 <GPIO_PeriClockControl+0x190>
            GPIOI_PCLK_DI();
 80006a8:	4b0b      	ldr	r3, [pc, #44]	; (80006d8 <GPIO_PeriClockControl+0x1b4>)
 80006aa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80006ac:	4a0a      	ldr	r2, [pc, #40]	; (80006d8 <GPIO_PeriClockControl+0x1b4>)
 80006ae:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80006b2:	6313      	str	r3, [r2, #48]	; 0x30
        if(pGPIOx == GPIOJ)
 80006b4:	687b      	ldr	r3, [r7, #4]
 80006b6:	4a11      	ldr	r2, [pc, #68]	; (80006fc <GPIO_PeriClockControl+0x1d8>)
 80006b8:	4293      	cmp	r3, r2
 80006ba:	d105      	bne.n	80006c8 <GPIO_PeriClockControl+0x1a4>
            GPIOJ_PCLK_DI();
 80006bc:	4b06      	ldr	r3, [pc, #24]	; (80006d8 <GPIO_PeriClockControl+0x1b4>)
 80006be:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80006c0:	4a05      	ldr	r2, [pc, #20]	; (80006d8 <GPIO_PeriClockControl+0x1b4>)
 80006c2:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80006c6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80006c8:	bf00      	nop
 80006ca:	370c      	adds	r7, #12
 80006cc:	46bd      	mov	sp, r7
 80006ce:	bc80      	pop	{r7}
 80006d0:	4770      	bx	lr
 80006d2:	bf00      	nop
 80006d4:	40020000 	.word	0x40020000
 80006d8:	40023800 	.word	0x40023800
 80006dc:	40020400 	.word	0x40020400
 80006e0:	40020800 	.word	0x40020800
 80006e4:	40020c00 	.word	0x40020c00
 80006e8:	40021000 	.word	0x40021000
 80006ec:	40021400 	.word	0x40021400
 80006f0:	40021800 	.word	0x40021800
 80006f4:	40021c00 	.word	0x40021c00
 80006f8:	40022000 	.word	0x40022000
 80006fc:	40022400 	.word	0x40022400

08000700 <SPI_Init>:
 *
 * @Note            -
 *
 */
void SPI_Init(SPI_Handle_t *pSPIx)
{
 8000700:	b580      	push	{r7, lr}
 8000702:	b084      	sub	sp, #16
 8000704:	af00      	add	r7, sp, #0
 8000706:	6078      	str	r0, [r7, #4]
	uint32_t tempReg = 0;
 8000708:	2300      	movs	r3, #0
 800070a:	60fb      	str	r3, [r7, #12]
	/*enable clock for SPIx*/
	SPI_PeriClockControl(pSPIx->SPIx,ENABLE);
 800070c:	687b      	ldr	r3, [r7, #4]
 800070e:	681b      	ldr	r3, [r3, #0]
 8000710:	2101      	movs	r1, #1
 8000712:	4618      	mov	r0, r3
 8000714:	f000 f850 	bl	80007b8 <SPI_PeriClockControl>
	/*Config device mode for microcontroller*/
	tempReg |= pSPIx->SPIConfig.SPI_DeviceMode << MSRT_BIT_POSITION;
 8000718:	687b      	ldr	r3, [r7, #4]
 800071a:	791b      	ldrb	r3, [r3, #4]
 800071c:	009b      	lsls	r3, r3, #2
 800071e:	461a      	mov	r2, r3
 8000720:	68fb      	ldr	r3, [r7, #12]
 8000722:	4313      	orrs	r3, r2
 8000724:	60fb      	str	r3, [r7, #12]
	/*Config bus configuration*/
	if(pSPIx->SPIConfig.SPI_BusConfig == SPI_BUS_FULL_DUPLEX)
 8000726:	687b      	ldr	r3, [r7, #4]
 8000728:	795b      	ldrb	r3, [r3, #5]
 800072a:	2b00      	cmp	r3, #0
 800072c:	d104      	bne.n	8000738 <SPI_Init+0x38>
	{
		tempReg &= ~(1 << BIDI_MODE_BIT_POSITION);
 800072e:	68fb      	ldr	r3, [r7, #12]
 8000730:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8000734:	60fb      	str	r3, [r7, #12]
 8000736:	e014      	b.n	8000762 <SPI_Init+0x62>
	}
	else if(pSPIx->SPIConfig.SPI_BusConfig == SPI_BUS_HAFL_DUPLEX)
 8000738:	687b      	ldr	r3, [r7, #4]
 800073a:	795b      	ldrb	r3, [r3, #5]
 800073c:	2b01      	cmp	r3, #1
 800073e:	d104      	bne.n	800074a <SPI_Init+0x4a>
	{
		tempReg |= 1 << BIDI_MODE_BIT_POSITION;
 8000740:	68fb      	ldr	r3, [r7, #12]
 8000742:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000746:	60fb      	str	r3, [r7, #12]
 8000748:	e00b      	b.n	8000762 <SPI_Init+0x62>
	}
	else if (pSPIx->SPIConfig.SPI_BusConfig == SPI_BUS_SIMPLEX_RX_ONLY)
 800074a:	687b      	ldr	r3, [r7, #4]
 800074c:	795b      	ldrb	r3, [r3, #5]
 800074e:	2b02      	cmp	r3, #2
 8000750:	d107      	bne.n	8000762 <SPI_Init+0x62>
	{
		tempReg |= 1 << BIDI_MODE_BIT_POSITION;
 8000752:	68fb      	ldr	r3, [r7, #12]
 8000754:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000758:	60fb      	str	r3, [r7, #12]
		tempReg |= 1 << RX_ONLY_BIT_POSITION;
 800075a:	68fb      	ldr	r3, [r7, #12]
 800075c:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000760:	60fb      	str	r3, [r7, #12]
	}
	/*Config clock speed for SPI*/
	tempReg |= pSPIx->SPIConfig.SPI_ClkSpeed << BR_BIT_POSITION;
 8000762:	687b      	ldr	r3, [r7, #4]
 8000764:	799b      	ldrb	r3, [r3, #6]
 8000766:	00db      	lsls	r3, r3, #3
 8000768:	461a      	mov	r2, r3
 800076a:	68fb      	ldr	r3, [r7, #12]
 800076c:	4313      	orrs	r3, r2
 800076e:	60fb      	str	r3, [r7, #12]
	/*Config data frame for SPI*/
	tempReg |= pSPIx->SPIConfig.SPI_DFF << DFF_BIT_POSITION;
 8000770:	687b      	ldr	r3, [r7, #4]
 8000772:	79db      	ldrb	r3, [r3, #7]
 8000774:	02db      	lsls	r3, r3, #11
 8000776:	461a      	mov	r2, r3
 8000778:	68fb      	ldr	r3, [r7, #12]
 800077a:	4313      	orrs	r3, r2
 800077c:	60fb      	str	r3, [r7, #12]
	/*Config CPOL and CPHA for SPI*/
	tempReg |= pSPIx->SPIConfig.SPI_CPHA << CPHA_BIT_POSITION;
 800077e:	687b      	ldr	r3, [r7, #4]
 8000780:	7a5b      	ldrb	r3, [r3, #9]
 8000782:	461a      	mov	r2, r3
 8000784:	68fb      	ldr	r3, [r7, #12]
 8000786:	4313      	orrs	r3, r2
 8000788:	60fb      	str	r3, [r7, #12]
	tempReg |= pSPIx->SPIConfig.SPI_CPOL << CPOL_BIT_POSITION;
 800078a:	687b      	ldr	r3, [r7, #4]
 800078c:	7a1b      	ldrb	r3, [r3, #8]
 800078e:	005b      	lsls	r3, r3, #1
 8000790:	461a      	mov	r2, r3
 8000792:	68fb      	ldr	r3, [r7, #12]
 8000794:	4313      	orrs	r3, r2
 8000796:	60fb      	str	r3, [r7, #12]
	/*Config software management for slave slected*/
	tempReg |= pSPIx->SPIConfig.SPI_SSM << SSM_BIT_POSITION;
 8000798:	687b      	ldr	r3, [r7, #4]
 800079a:	7a9b      	ldrb	r3, [r3, #10]
 800079c:	025b      	lsls	r3, r3, #9
 800079e:	461a      	mov	r2, r3
 80007a0:	68fb      	ldr	r3, [r7, #12]
 80007a2:	4313      	orrs	r3, r2
 80007a4:	60fb      	str	r3, [r7, #12]

	pSPIx->SPIx->CR1 = tempReg;
 80007a6:	687b      	ldr	r3, [r7, #4]
 80007a8:	681b      	ldr	r3, [r3, #0]
 80007aa:	68fa      	ldr	r2, [r7, #12]
 80007ac:	601a      	str	r2, [r3, #0]

}
 80007ae:	bf00      	nop
 80007b0:	3710      	adds	r7, #16
 80007b2:	46bd      	mov	sp, r7
 80007b4:	bd80      	pop	{r7, pc}
	...

080007b8 <SPI_PeriClockControl>:
 *
 * @Note            -
 *
 */
void SPI_PeriClockControl(SPI_RegDef_t *pSPIx,uint8_t EnorDi)
{
 80007b8:	b480      	push	{r7}
 80007ba:	b083      	sub	sp, #12
 80007bc:	af00      	add	r7, sp, #0
 80007be:	6078      	str	r0, [r7, #4]
 80007c0:	460b      	mov	r3, r1
 80007c2:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 80007c4:	78fb      	ldrb	r3, [r7, #3]
 80007c6:	2b01      	cmp	r3, #1
 80007c8:	d13c      	bne.n	8000844 <SPI_PeriClockControl+0x8c>
	    {
	        if(pSPIx == SPI1)
 80007ca:	687b      	ldr	r3, [r7, #4]
 80007cc:	4a3e      	ldr	r2, [pc, #248]	; (80008c8 <SPI_PeriClockControl+0x110>)
 80007ce:	4293      	cmp	r3, r2
 80007d0:	d105      	bne.n	80007de <SPI_PeriClockControl+0x26>
	        {
	        	SPI1_PCLK_EN();
 80007d2:	4b3e      	ldr	r3, [pc, #248]	; (80008cc <SPI_PeriClockControl+0x114>)
 80007d4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80007d6:	4a3d      	ldr	r2, [pc, #244]	; (80008cc <SPI_PeriClockControl+0x114>)
 80007d8:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80007dc:	6453      	str	r3, [r2, #68]	; 0x44
	        }
	        if(pSPIx == SPI2)
 80007de:	687b      	ldr	r3, [r7, #4]
 80007e0:	4a3b      	ldr	r2, [pc, #236]	; (80008d0 <SPI_PeriClockControl+0x118>)
 80007e2:	4293      	cmp	r3, r2
 80007e4:	d105      	bne.n	80007f2 <SPI_PeriClockControl+0x3a>
	        {
	        	SPI2_PCLK_EN();
 80007e6:	4b39      	ldr	r3, [pc, #228]	; (80008cc <SPI_PeriClockControl+0x114>)
 80007e8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80007ea:	4a38      	ldr	r2, [pc, #224]	; (80008cc <SPI_PeriClockControl+0x114>)
 80007ec:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80007f0:	6413      	str	r3, [r2, #64]	; 0x40
	        }
	        if(pSPIx == SPI3)
 80007f2:	687b      	ldr	r3, [r7, #4]
 80007f4:	4a37      	ldr	r2, [pc, #220]	; (80008d4 <SPI_PeriClockControl+0x11c>)
 80007f6:	4293      	cmp	r3, r2
 80007f8:	d105      	bne.n	8000806 <SPI_PeriClockControl+0x4e>
	        {
	        	SPI3_PCLK_EN();
 80007fa:	4b34      	ldr	r3, [pc, #208]	; (80008cc <SPI_PeriClockControl+0x114>)
 80007fc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80007fe:	4a33      	ldr	r2, [pc, #204]	; (80008cc <SPI_PeriClockControl+0x114>)
 8000800:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000804:	6413      	str	r3, [r2, #64]	; 0x40
	        }
	        if(pSPIx == SPI4)
 8000806:	687b      	ldr	r3, [r7, #4]
 8000808:	4a33      	ldr	r2, [pc, #204]	; (80008d8 <SPI_PeriClockControl+0x120>)
 800080a:	4293      	cmp	r3, r2
 800080c:	d105      	bne.n	800081a <SPI_PeriClockControl+0x62>
	        {
	        	SPI4_PCLK_EN();
 800080e:	4b2f      	ldr	r3, [pc, #188]	; (80008cc <SPI_PeriClockControl+0x114>)
 8000810:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000812:	4a2e      	ldr	r2, [pc, #184]	; (80008cc <SPI_PeriClockControl+0x114>)
 8000814:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000818:	6453      	str	r3, [r2, #68]	; 0x44
	        }
	        if(pSPIx == SPI5)
 800081a:	687b      	ldr	r3, [r7, #4]
 800081c:	4a2f      	ldr	r2, [pc, #188]	; (80008dc <SPI_PeriClockControl+0x124>)
 800081e:	4293      	cmp	r3, r2
 8000820:	d105      	bne.n	800082e <SPI_PeriClockControl+0x76>
	        {
	        	SPI5_PCLK_EN();
 8000822:	4b2a      	ldr	r3, [pc, #168]	; (80008cc <SPI_PeriClockControl+0x114>)
 8000824:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000826:	4a29      	ldr	r2, [pc, #164]	; (80008cc <SPI_PeriClockControl+0x114>)
 8000828:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800082c:	6453      	str	r3, [r2, #68]	; 0x44
	        }
	        if(pSPIx == SPI6)
 800082e:	687b      	ldr	r3, [r7, #4]
 8000830:	4a2b      	ldr	r2, [pc, #172]	; (80008e0 <SPI_PeriClockControl+0x128>)
 8000832:	4293      	cmp	r3, r2
 8000834:	d142      	bne.n	80008bc <SPI_PeriClockControl+0x104>
	        {
	        	SPI6_PCLK_EN();
 8000836:	4b25      	ldr	r3, [pc, #148]	; (80008cc <SPI_PeriClockControl+0x114>)
 8000838:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800083a:	4a24      	ldr	r2, [pc, #144]	; (80008cc <SPI_PeriClockControl+0x114>)
 800083c:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8000840:	6453      	str	r3, [r2, #68]	; 0x44
	        if(pSPIx == SPI6)
	        {
	        	SPI6_PCLK_DI();
	        }
	    }
}
 8000842:	e03b      	b.n	80008bc <SPI_PeriClockControl+0x104>
	        if(pSPIx == SPI1)
 8000844:	687b      	ldr	r3, [r7, #4]
 8000846:	4a20      	ldr	r2, [pc, #128]	; (80008c8 <SPI_PeriClockControl+0x110>)
 8000848:	4293      	cmp	r3, r2
 800084a:	d105      	bne.n	8000858 <SPI_PeriClockControl+0xa0>
	        	SPI1_PCLK_DI();
 800084c:	4b1f      	ldr	r3, [pc, #124]	; (80008cc <SPI_PeriClockControl+0x114>)
 800084e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000850:	4a1e      	ldr	r2, [pc, #120]	; (80008cc <SPI_PeriClockControl+0x114>)
 8000852:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000856:	6253      	str	r3, [r2, #36]	; 0x24
	        if(pSPIx == SPI2)
 8000858:	687b      	ldr	r3, [r7, #4]
 800085a:	4a1d      	ldr	r2, [pc, #116]	; (80008d0 <SPI_PeriClockControl+0x118>)
 800085c:	4293      	cmp	r3, r2
 800085e:	d105      	bne.n	800086c <SPI_PeriClockControl+0xb4>
	        	SPI2_PCLK_DI();
 8000860:	4b1a      	ldr	r3, [pc, #104]	; (80008cc <SPI_PeriClockControl+0x114>)
 8000862:	6a1b      	ldr	r3, [r3, #32]
 8000864:	4a19      	ldr	r2, [pc, #100]	; (80008cc <SPI_PeriClockControl+0x114>)
 8000866:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800086a:	6213      	str	r3, [r2, #32]
	        if(pSPIx == SPI3)
 800086c:	687b      	ldr	r3, [r7, #4]
 800086e:	4a19      	ldr	r2, [pc, #100]	; (80008d4 <SPI_PeriClockControl+0x11c>)
 8000870:	4293      	cmp	r3, r2
 8000872:	d105      	bne.n	8000880 <SPI_PeriClockControl+0xc8>
	        	SPI3_PCLK_DI();
 8000874:	4b15      	ldr	r3, [pc, #84]	; (80008cc <SPI_PeriClockControl+0x114>)
 8000876:	6a1b      	ldr	r3, [r3, #32]
 8000878:	4a14      	ldr	r2, [pc, #80]	; (80008cc <SPI_PeriClockControl+0x114>)
 800087a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800087e:	6213      	str	r3, [r2, #32]
	        if(pSPIx == SPI4)
 8000880:	687b      	ldr	r3, [r7, #4]
 8000882:	4a15      	ldr	r2, [pc, #84]	; (80008d8 <SPI_PeriClockControl+0x120>)
 8000884:	4293      	cmp	r3, r2
 8000886:	d105      	bne.n	8000894 <SPI_PeriClockControl+0xdc>
	        	SPI4_PCLK_DI();
 8000888:	4b10      	ldr	r3, [pc, #64]	; (80008cc <SPI_PeriClockControl+0x114>)
 800088a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800088c:	4a0f      	ldr	r2, [pc, #60]	; (80008cc <SPI_PeriClockControl+0x114>)
 800088e:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000892:	6253      	str	r3, [r2, #36]	; 0x24
	        if(pSPIx == SPI5)
 8000894:	687b      	ldr	r3, [r7, #4]
 8000896:	4a11      	ldr	r2, [pc, #68]	; (80008dc <SPI_PeriClockControl+0x124>)
 8000898:	4293      	cmp	r3, r2
 800089a:	d105      	bne.n	80008a8 <SPI_PeriClockControl+0xf0>
	        	SPI5_PCLK_DI();
 800089c:	4b0b      	ldr	r3, [pc, #44]	; (80008cc <SPI_PeriClockControl+0x114>)
 800089e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80008a0:	4a0a      	ldr	r2, [pc, #40]	; (80008cc <SPI_PeriClockControl+0x114>)
 80008a2:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80008a6:	6253      	str	r3, [r2, #36]	; 0x24
	        if(pSPIx == SPI6)
 80008a8:	687b      	ldr	r3, [r7, #4]
 80008aa:	4a0d      	ldr	r2, [pc, #52]	; (80008e0 <SPI_PeriClockControl+0x128>)
 80008ac:	4293      	cmp	r3, r2
 80008ae:	d105      	bne.n	80008bc <SPI_PeriClockControl+0x104>
	        	SPI6_PCLK_DI();
 80008b0:	4b06      	ldr	r3, [pc, #24]	; (80008cc <SPI_PeriClockControl+0x114>)
 80008b2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80008b4:	4a05      	ldr	r2, [pc, #20]	; (80008cc <SPI_PeriClockControl+0x114>)
 80008b6:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80008ba:	6253      	str	r3, [r2, #36]	; 0x24
}
 80008bc:	bf00      	nop
 80008be:	370c      	adds	r7, #12
 80008c0:	46bd      	mov	sp, r7
 80008c2:	bc80      	pop	{r7}
 80008c4:	4770      	bx	lr
 80008c6:	bf00      	nop
 80008c8:	40013000 	.word	0x40013000
 80008cc:	40023800 	.word	0x40023800
 80008d0:	40003800 	.word	0x40003800
 80008d4:	40003c00 	.word	0x40003c00
 80008d8:	40013400 	.word	0x40013400
 80008dc:	40015000 	.word	0x40015000
 80008e0:	40015400 	.word	0x40015400

080008e4 <Is_Empty>:
 *
 * @Note            -
 *
 */
static uint8_t Is_Empty(SPI_RegDef_t *pSPIx)
{
 80008e4:	b480      	push	{r7}
 80008e6:	b083      	sub	sp, #12
 80008e8:	af00      	add	r7, sp, #0
 80008ea:	6078      	str	r0, [r7, #4]
	return (((pSPIx->SR)>>TXE_BIT_POSITION) & 0x00000001);
 80008ec:	687b      	ldr	r3, [r7, #4]
 80008ee:	689b      	ldr	r3, [r3, #8]
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	b2db      	uxtb	r3, r3
 80008f4:	f003 0301 	and.w	r3, r3, #1
 80008f8:	b2db      	uxtb	r3, r3
}
 80008fa:	4618      	mov	r0, r3
 80008fc:	370c      	adds	r7, #12
 80008fe:	46bd      	mov	sp, r7
 8000900:	bc80      	pop	{r7}
 8000902:	4770      	bx	lr

08000904 <Is_16BitFrame>:
static uint8_t Is_16BitFrame(SPI_RegDef_t *pSPIx)
{
 8000904:	b480      	push	{r7}
 8000906:	b083      	sub	sp, #12
 8000908:	af00      	add	r7, sp, #0
 800090a:	6078      	str	r0, [r7, #4]
	return (((pSPIx->CR1)>>DFF_BIT_POSITION)  & 0x00000001);
 800090c:	687b      	ldr	r3, [r7, #4]
 800090e:	681b      	ldr	r3, [r3, #0]
 8000910:	0adb      	lsrs	r3, r3, #11
 8000912:	b2db      	uxtb	r3, r3
 8000914:	f003 0301 	and.w	r3, r3, #1
 8000918:	b2db      	uxtb	r3, r3
}
 800091a:	4618      	mov	r0, r3
 800091c:	370c      	adds	r7, #12
 800091e:	46bd      	mov	sp, r7
 8000920:	bc80      	pop	{r7}
 8000922:	4770      	bx	lr

08000924 <SPI_SendData>:
void SPI_SendData(SPI_RegDef_t *pSPIx, uint8_t *Txbuffer, uint32_t Len)
{
 8000924:	b580      	push	{r7, lr}
 8000926:	b084      	sub	sp, #16
 8000928:	af00      	add	r7, sp, #0
 800092a:	60f8      	str	r0, [r7, #12]
 800092c:	60b9      	str	r1, [r7, #8]
 800092e:	607a      	str	r2, [r7, #4]
	while(Len != EMPTY)
 8000930:	e023      	b.n	800097a <SPI_SendData+0x56>
	{
		while(!Is_Empty(pSPIx))
 8000932:	bf00      	nop
 8000934:	68f8      	ldr	r0, [r7, #12]
 8000936:	f7ff ffd5 	bl	80008e4 <Is_Empty>
 800093a:	4603      	mov	r3, r0
 800093c:	2b00      	cmp	r3, #0
 800093e:	d0f9      	beq.n	8000934 <SPI_SendData+0x10>
		{

		}
		if(Is_16BitFrame(pSPIx))
 8000940:	68f8      	ldr	r0, [r7, #12]
 8000942:	f7ff ffdf 	bl	8000904 <Is_16BitFrame>
 8000946:	4603      	mov	r3, r0
 8000948:	2b00      	cmp	r3, #0
 800094a:	d00b      	beq.n	8000964 <SPI_SendData+0x40>
		{
			/*16 bit data frame*/
			pSPIx->DR = *((uint16_t*)Txbuffer);
 800094c:	68bb      	ldr	r3, [r7, #8]
 800094e:	881b      	ldrh	r3, [r3, #0]
 8000950:	461a      	mov	r2, r3
 8000952:	68fb      	ldr	r3, [r7, #12]
 8000954:	60da      	str	r2, [r3, #12]
			(uint16_t*)Txbuffer++;
 8000956:	68bb      	ldr	r3, [r7, #8]
 8000958:	3301      	adds	r3, #1
 800095a:	60bb      	str	r3, [r7, #8]
			Len -= 2;
 800095c:	687b      	ldr	r3, [r7, #4]
 800095e:	3b02      	subs	r3, #2
 8000960:	607b      	str	r3, [r7, #4]
 8000962:	e00a      	b.n	800097a <SPI_SendData+0x56>
		}
		else
		{
			/* 8 bit data frame*/
			pSPIx->DR = *((uint8_t*)Txbuffer);
 8000964:	68bb      	ldr	r3, [r7, #8]
 8000966:	781b      	ldrb	r3, [r3, #0]
 8000968:	461a      	mov	r2, r3
 800096a:	68fb      	ldr	r3, [r7, #12]
 800096c:	60da      	str	r2, [r3, #12]
			(uint8_t*)Txbuffer++;
 800096e:	68bb      	ldr	r3, [r7, #8]
 8000970:	3301      	adds	r3, #1
 8000972:	60bb      	str	r3, [r7, #8]
			Len -= 1;
 8000974:	687b      	ldr	r3, [r7, #4]
 8000976:	3b01      	subs	r3, #1
 8000978:	607b      	str	r3, [r7, #4]
	while(Len != EMPTY)
 800097a:	687b      	ldr	r3, [r7, #4]
 800097c:	2b00      	cmp	r3, #0
 800097e:	d1d8      	bne.n	8000932 <SPI_SendData+0xe>
		}
	}
	return;
 8000980:	bf00      	nop
}
 8000982:	3710      	adds	r7, #16
 8000984:	46bd      	mov	sp, r7
 8000986:	bd80      	pop	{r7, pc}

08000988 <SPI_PeripheralControl>:
 *
 * @Note            -
 *
 */
void SPI_PeripheralControl(SPI_RegDef_t *pSPIx,uint8_t EnorDi)
{
 8000988:	b480      	push	{r7}
 800098a:	b083      	sub	sp, #12
 800098c:	af00      	add	r7, sp, #0
 800098e:	6078      	str	r0, [r7, #4]
 8000990:	460b      	mov	r3, r1
 8000992:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 8000994:	78fb      	ldrb	r3, [r7, #3]
 8000996:	2b01      	cmp	r3, #1
 8000998:	d106      	bne.n	80009a8 <SPI_PeripheralControl+0x20>
	{
		pSPIx->CR1 |= 1 << SPE_BIT_POSITION;
 800099a:	687b      	ldr	r3, [r7, #4]
 800099c:	681b      	ldr	r3, [r3, #0]
 800099e:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 80009a2:	687b      	ldr	r3, [r7, #4]
 80009a4:	601a      	str	r2, [r3, #0]
		return;
 80009a6:	e006      	b.n	80009b6 <SPI_PeripheralControl+0x2e>
	}
	else
	{
		pSPIx->CR1 &= ~(1 << SPE_BIT_POSITION);
 80009a8:	687b      	ldr	r3, [r7, #4]
 80009aa:	681b      	ldr	r3, [r3, #0]
 80009ac:	f023 0240 	bic.w	r2, r3, #64	; 0x40
 80009b0:	687b      	ldr	r3, [r7, #4]
 80009b2:	601a      	str	r2, [r3, #0]
		return;
 80009b4:	bf00      	nop
	}
}
 80009b6:	370c      	adds	r7, #12
 80009b8:	46bd      	mov	sp, r7
 80009ba:	bc80      	pop	{r7}
 80009bc:	4770      	bx	lr

080009be <SPI_SSIConfig>:
 *
 * @Note            -
 *
 */
void SPI_SSIConfig(SPI_RegDef_t *pSPIx,uint8_t EnorDi)
{
 80009be:	b480      	push	{r7}
 80009c0:	b083      	sub	sp, #12
 80009c2:	af00      	add	r7, sp, #0
 80009c4:	6078      	str	r0, [r7, #4]
 80009c6:	460b      	mov	r3, r1
 80009c8:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 80009ca:	78fb      	ldrb	r3, [r7, #3]
 80009cc:	2b01      	cmp	r3, #1
 80009ce:	d106      	bne.n	80009de <SPI_SSIConfig+0x20>
	{
		pSPIx->CR1 |= 1 << SSI_BIT_POSITION;
 80009d0:	687b      	ldr	r3, [r7, #4]
 80009d2:	681b      	ldr	r3, [r3, #0]
 80009d4:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 80009d8:	687b      	ldr	r3, [r7, #4]
 80009da:	601a      	str	r2, [r3, #0]
		return;
 80009dc:	e006      	b.n	80009ec <SPI_SSIConfig+0x2e>
	}
	else
	{
		pSPIx->CR1 &= ~(1 << SSI_BIT_POSITION);
 80009de:	687b      	ldr	r3, [r7, #4]
 80009e0:	681b      	ldr	r3, [r3, #0]
 80009e2:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 80009e6:	687b      	ldr	r3, [r7, #4]
 80009e8:	601a      	str	r2, [r3, #0]
		return;
 80009ea:	bf00      	nop
	}
}
 80009ec:	370c      	adds	r7, #12
 80009ee:	46bd      	mov	sp, r7
 80009f0:	bc80      	pop	{r7}
 80009f2:	4770      	bx	lr

080009f4 <SPI2_GPIOInits>:
 * PB13 SPI2_SCK
 * PB14 SPI2_MISO
 * PB15 SPI2_MOSI
 * */
void SPI2_GPIOInits(void)
{
 80009f4:	b580      	push	{r7, lr}
 80009f6:	b084      	sub	sp, #16
 80009f8:	af00      	add	r7, sp, #0
	GPIO_Handle_t SPIPins;
	SPIPins.pGPIOx = GPIOB;
 80009fa:	4b14      	ldr	r3, [pc, #80]	; (8000a4c <SPI2_GPIOInits+0x58>)
 80009fc:	607b      	str	r3, [r7, #4]
	SPIPins.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_ALT;
 80009fe:	2302      	movs	r3, #2
 8000a00:	727b      	strb	r3, [r7, #9]
	SPIPins.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000a02:	2300      	movs	r3, #0
 8000a04:	72fb      	strb	r3, [r7, #11]
	SPIPins.GPIO_PinConfig.GPIO_AltFunMode = 5;
 8000a06:	2305      	movs	r3, #5
 8000a08:	737b      	strb	r3, [r7, #13]
	SPIPins.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_HIGH;
 8000a0a:	2302      	movs	r3, #2
 8000a0c:	72bb      	strb	r3, [r7, #10]
	SPIPins.GPIO_PinConfig.GPIO_PinOpType = GPIO_OP_TYPE_PP;
 8000a0e:	2300      	movs	r3, #0
 8000a10:	733b      	strb	r3, [r7, #12]
	//CLK
	SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;
 8000a12:	230d      	movs	r3, #13
 8000a14:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&SPIPins);
 8000a16:	1d3b      	adds	r3, r7, #4
 8000a18:	4618      	mov	r0, r3
 8000a1a:	f7ff fbed 	bl	80001f8 <GPIO_Init>
	//NSS
	SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12;
 8000a1e:	230c      	movs	r3, #12
 8000a20:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&SPIPins);
 8000a22:	1d3b      	adds	r3, r7, #4
 8000a24:	4618      	mov	r0, r3
 8000a26:	f7ff fbe7 	bl	80001f8 <GPIO_Init>
	//MISO
	SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_14;
 8000a2a:	230e      	movs	r3, #14
 8000a2c:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&SPIPins);
 8000a2e:	1d3b      	adds	r3, r7, #4
 8000a30:	4618      	mov	r0, r3
 8000a32:	f7ff fbe1 	bl	80001f8 <GPIO_Init>
	//MOSI
	SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_15;
 8000a36:	230f      	movs	r3, #15
 8000a38:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&SPIPins);
 8000a3a:	1d3b      	adds	r3, r7, #4
 8000a3c:	4618      	mov	r0, r3
 8000a3e:	f7ff fbdb 	bl	80001f8 <GPIO_Init>

}
 8000a42:	bf00      	nop
 8000a44:	3710      	adds	r7, #16
 8000a46:	46bd      	mov	sp, r7
 8000a48:	bd80      	pop	{r7, pc}
 8000a4a:	bf00      	nop
 8000a4c:	40020400 	.word	0x40020400

08000a50 <SPI2_Init>:
void SPI2_Init(void)
{
 8000a50:	b580      	push	{r7, lr}
 8000a52:	b084      	sub	sp, #16
 8000a54:	af00      	add	r7, sp, #0
	SPI_Handle_t SPI2handle;
	SPI2handle.SPIx = SPI2;
 8000a56:	4b0c      	ldr	r3, [pc, #48]	; (8000a88 <SPI2_Init+0x38>)
 8000a58:	607b      	str	r3, [r7, #4]
	SPI2handle.SPIConfig.SPI_BusConfig = SPI_BUS_FULL_DUPLEX;
 8000a5a:	2300      	movs	r3, #0
 8000a5c:	727b      	strb	r3, [r7, #9]
	SPI2handle.SPIConfig.SPI_DeviceMode = SPI_DEVICE_MASTER;
 8000a5e:	2301      	movs	r3, #1
 8000a60:	723b      	strb	r3, [r7, #8]
	SPI2handle.SPIConfig.SPI_ClkSpeed = SPI_CLOCK_DIV2;
 8000a62:	2300      	movs	r3, #0
 8000a64:	72bb      	strb	r3, [r7, #10]
	SPI2handle.SPIConfig.SPI_DFF = SPI_DFF_8BITS;
 8000a66:	2300      	movs	r3, #0
 8000a68:	72fb      	strb	r3, [r7, #11]
	SPI2handle.SPIConfig.SPI_CPHA = SPI_CPHA_LOW;
 8000a6a:	2300      	movs	r3, #0
 8000a6c:	737b      	strb	r3, [r7, #13]
	SPI2handle.SPIConfig.SPI_CPOL = SPI_CPOL_LOW;
 8000a6e:	2300      	movs	r3, #0
 8000a70:	733b      	strb	r3, [r7, #12]
	SPI2handle.SPIConfig.SPI_SSM = SPI_SSM_EN;
 8000a72:	2301      	movs	r3, #1
 8000a74:	73bb      	strb	r3, [r7, #14]
	SPI_Init(&SPI2handle);
 8000a76:	1d3b      	adds	r3, r7, #4
 8000a78:	4618      	mov	r0, r3
 8000a7a:	f7ff fe41 	bl	8000700 <SPI_Init>

}
 8000a7e:	bf00      	nop
 8000a80:	3710      	adds	r7, #16
 8000a82:	46bd      	mov	sp, r7
 8000a84:	bd80      	pop	{r7, pc}
 8000a86:	bf00      	nop
 8000a88:	40003800 	.word	0x40003800

08000a8c <main>:
int main(void)
{
 8000a8c:	b580      	push	{r7, lr}
 8000a8e:	b084      	sub	sp, #16
 8000a90:	af00      	add	r7, sp, #0
	char user_data[] = "hello world";
 8000a92:	4a10      	ldr	r2, [pc, #64]	; (8000ad4 <main+0x48>)
 8000a94:	1d3b      	adds	r3, r7, #4
 8000a96:	ca07      	ldmia	r2, {r0, r1, r2}
 8000a98:	e883 0007 	stmia.w	r3, {r0, r1, r2}
	SPI2_GPIOInits();
 8000a9c:	f7ff ffaa 	bl	80009f4 <SPI2_GPIOInits>
	SPI2_Init();
 8000aa0:	f7ff ffd6 	bl	8000a50 <SPI2_Init>
	//enable SPI2 peripherals
	SPI_SSIConfig(SPI2,ENABLE);
 8000aa4:	2101      	movs	r1, #1
 8000aa6:	480c      	ldr	r0, [pc, #48]	; (8000ad8 <main+0x4c>)
 8000aa8:	f7ff ff89 	bl	80009be <SPI_SSIConfig>
	SPI_PeripheralControl(SPI2,ENABLE);
 8000aac:	2101      	movs	r1, #1
 8000aae:	480a      	ldr	r0, [pc, #40]	; (8000ad8 <main+0x4c>)
 8000ab0:	f7ff ff6a 	bl	8000988 <SPI_PeripheralControl>
	SPI_SendData(SPI2,(uint8_t*)user_data,(uint32_t)strlen(user_data));
 8000ab4:	1d3b      	adds	r3, r7, #4
 8000ab6:	4618      	mov	r0, r3
 8000ab8:	f7ff fb96 	bl	80001e8 <strlen>
 8000abc:	4602      	mov	r2, r0
 8000abe:	1d3b      	adds	r3, r7, #4
 8000ac0:	4619      	mov	r1, r3
 8000ac2:	4805      	ldr	r0, [pc, #20]	; (8000ad8 <main+0x4c>)
 8000ac4:	f7ff ff2e 	bl	8000924 <SPI_SendData>
	SPI_PeripheralControl(SPI2,DISABLE);
 8000ac8:	2100      	movs	r1, #0
 8000aca:	4803      	ldr	r0, [pc, #12]	; (8000ad8 <main+0x4c>)
 8000acc:	f7ff ff5c 	bl	8000988 <SPI_PeripheralControl>
	while(1)
 8000ad0:	e7fe      	b.n	8000ad0 <main+0x44>
 8000ad2:	bf00      	nop
 8000ad4:	08000b90 	.word	0x08000b90
 8000ad8:	40003800 	.word	0x40003800

08000adc <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000adc:	480d      	ldr	r0, [pc, #52]	; (8000b14 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000ade:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000ae0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000ae4:	480c      	ldr	r0, [pc, #48]	; (8000b18 <LoopForever+0x6>)
  ldr r1, =_edata
 8000ae6:	490d      	ldr	r1, [pc, #52]	; (8000b1c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000ae8:	4a0d      	ldr	r2, [pc, #52]	; (8000b20 <LoopForever+0xe>)
  movs r3, #0
 8000aea:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000aec:	e002      	b.n	8000af4 <LoopCopyDataInit>

08000aee <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000aee:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000af0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000af2:	3304      	adds	r3, #4

08000af4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000af4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000af6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000af8:	d3f9      	bcc.n	8000aee <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000afa:	4a0a      	ldr	r2, [pc, #40]	; (8000b24 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000afc:	4c0a      	ldr	r4, [pc, #40]	; (8000b28 <LoopForever+0x16>)
  movs r3, #0
 8000afe:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000b00:	e001      	b.n	8000b06 <LoopFillZerobss>

08000b02 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000b02:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000b04:	3204      	adds	r2, #4

08000b06 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000b06:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000b08:	d3fb      	bcc.n	8000b02 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000b0a:	f000 f811 	bl	8000b30 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000b0e:	f7ff ffbd 	bl	8000a8c <main>

08000b12 <LoopForever>:

LoopForever:
    b LoopForever
 8000b12:	e7fe      	b.n	8000b12 <LoopForever>
  ldr   r0, =_estack
 8000b14:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000b18:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000b1c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000b20:	08000ba4 	.word	0x08000ba4
  ldr r2, =_sbss
 8000b24:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000b28:	2000001c 	.word	0x2000001c

08000b2c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000b2c:	e7fe      	b.n	8000b2c <ADC_IRQHandler>
	...

08000b30 <__libc_init_array>:
 8000b30:	b570      	push	{r4, r5, r6, lr}
 8000b32:	4d0d      	ldr	r5, [pc, #52]	; (8000b68 <__libc_init_array+0x38>)
 8000b34:	4c0d      	ldr	r4, [pc, #52]	; (8000b6c <__libc_init_array+0x3c>)
 8000b36:	1b64      	subs	r4, r4, r5
 8000b38:	10a4      	asrs	r4, r4, #2
 8000b3a:	2600      	movs	r6, #0
 8000b3c:	42a6      	cmp	r6, r4
 8000b3e:	d109      	bne.n	8000b54 <__libc_init_array+0x24>
 8000b40:	4d0b      	ldr	r5, [pc, #44]	; (8000b70 <__libc_init_array+0x40>)
 8000b42:	4c0c      	ldr	r4, [pc, #48]	; (8000b74 <__libc_init_array+0x44>)
 8000b44:	f000 f818 	bl	8000b78 <_init>
 8000b48:	1b64      	subs	r4, r4, r5
 8000b4a:	10a4      	asrs	r4, r4, #2
 8000b4c:	2600      	movs	r6, #0
 8000b4e:	42a6      	cmp	r6, r4
 8000b50:	d105      	bne.n	8000b5e <__libc_init_array+0x2e>
 8000b52:	bd70      	pop	{r4, r5, r6, pc}
 8000b54:	f855 3b04 	ldr.w	r3, [r5], #4
 8000b58:	4798      	blx	r3
 8000b5a:	3601      	adds	r6, #1
 8000b5c:	e7ee      	b.n	8000b3c <__libc_init_array+0xc>
 8000b5e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000b62:	4798      	blx	r3
 8000b64:	3601      	adds	r6, #1
 8000b66:	e7f2      	b.n	8000b4e <__libc_init_array+0x1e>
 8000b68:	08000b9c 	.word	0x08000b9c
 8000b6c:	08000b9c 	.word	0x08000b9c
 8000b70:	08000b9c 	.word	0x08000b9c
 8000b74:	08000ba0 	.word	0x08000ba0

08000b78 <_init>:
 8000b78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b7a:	bf00      	nop
 8000b7c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000b7e:	bc08      	pop	{r3}
 8000b80:	469e      	mov	lr, r3
 8000b82:	4770      	bx	lr

08000b84 <_fini>:
 8000b84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b86:	bf00      	nop
 8000b88:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000b8a:	bc08      	pop	{r3}
 8000b8c:	469e      	mov	lr, r3
 8000b8e:	4770      	bx	lr
